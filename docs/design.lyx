#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
SimMarket Design
\end_layout

\begin_layout Author
Jonas Bj√∂rnerstedt
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The purpose of this document is to collect documentation of various design
 issues in SimMarket.
 It does not describe how to use the program or basic programming issues
 that are best described by the code itself.
 The purpose is to provide a background for more challenging issues that
 can be hard to understand from reading the program code.
\end_layout

\begin_layout Section
Data structure and initialization
\end_layout

\begin_layout Standard
The demand code is used in three basic ways
\end_layout

\begin_layout Enumerate
Estimation: 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset

 known, unknown parameters, 
\begin_inset Formula $d$
\end_inset

, and 
\begin_inset Formula $c$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Enumerate
Estimation is done on all markets but in RC, finddelta calculates on each
 market at a time.
\end_layout

\begin_layout Enumerate
findCosts calculates 
\begin_inset Formula $c$
\end_inset

.
 Note that this has to be always tested in order for the test of the mapping
 to be complete
\end_layout

\end_deeper
\begin_layout Enumerate
Simulation: parameters known, 
\begin_inset Formula $c$
\end_inset

 and 
\begin_inset Formula $d$
\end_inset

 known, 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset

 unknown
\end_layout

\begin_deeper
\begin_layout Enumerate
In RC done on all markets at one time - share() splits per market
\end_layout

\begin_layout Enumerate
In NL done market by market
\end_layout

\end_deeper
\begin_layout Enumerate
Generation: parameters known, 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $d$
\end_inset

 known, 
\begin_inset Formula $q$
\end_inset

 unknown.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
From p and d delta is generated, then shares
\end_layout

\begin_layout Enumerate
With market simulations, 
\begin_inset Formula $p$
\end_inset

 is unknown but 
\begin_inset Formula $c$
\end_inset

 is known.
 
\end_layout

\end_deeper
\begin_layout Standard
Initialization of the Estimate and derived classes (Market and Demand classes),
 
\end_layout

\begin_layout Enumerate
Initialization is performed with the init() method.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
init(selection) is invoked by equilibrium(selection), findCosts(selection),
 estimate(selection), estimateGMM()
\end_layout

\begin_layout Enumerate
init() is invoked by Market.init().
 When is this necessary?:
\end_layout

\begin_deeper
\begin_layout Enumerate
Estimation can be on selection.
 But simulation outside selection is problematic, it requires that 
\begin_inset Formula $d$
\end_inset

 is defined for new products.
\end_layout

\begin_layout Enumerate
An alternative could be to test whether Demand.init has been run.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
initSimulation(market number) is used prior to each market simulation.
\end_layout

\begin_deeper
\begin_layout Enumerate
initSimulation is invoked by Market.initSimulation(), 
\end_layout

\begin_layout Enumerate
which in turn is invoked by findCosts() and equilibrium()
\end_layout

\end_deeper
\begin_layout Subsection
Estimate class
\end_layout

\begin_layout Enumerate
Estimation variables, optionally restricted to a subset of the data
\end_layout

\begin_deeper
\begin_layout Enumerate
X, Z and y matrices
\end_layout

\begin_layout Enumerate
Xorig and Zorig for non-demeaned calculations when fixed effects estimation
 is used.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Organization variables, defined for all data.
 Panelid is defined for all to allow estimation and simulation to be performed
 on different samples of the data.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
obj.panelid - panel identifier (all data)
\end_layout

\begin_layout Enumerate
obj.vars - display vars
\end_layout

\begin_layout Enumerate
obj.lsdv - LSDV, persistent local var of init.
 Obsolete? (selection)
\end_layout

\begin_deeper
\begin_layout Enumerate
Created if it does not exist or if there is no selection
\end_layout

\begin_layout Enumerate
Drops zero dummies (on selection if set), ie simulation cannot be done outside
 selection
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
NLDemand class
\end_layout

\begin_layout Enumerate
obj.marketid and obj.dummarket - in Demand and Market classes this identifies
 markets - selection
\end_layout

\begin_layout Enumerate
obj.nestcount - nest variable names.
 Obsolete?
\end_layout

\begin_deeper
\begin_layout Enumerate
Used in estimate, shares, shareJacobian, elasticities, generateShares -
 to get number of nests
\end_layout

\end_deeper
\begin_layout Enumerate
obj.nest - nesting vars (no selection)
\end_layout

\begin_deeper
\begin_layout Enumerate
Set in initAdditional
\end_layout

\begin_layout Enumerate
Used in initSimulation, selects
\end_layout

\end_deeper
\begin_layout Enumerate
obj.p - non-demeaned price (no log) (selection).
 
\end_layout

\begin_deeper
\begin_layout Enumerate
used in shareJacobian on selection
\end_layout

\begin_layout Enumerate
used in generateShares, demand calc.
\end_layout

\begin_layout Enumerate
used in estimate as log variable!
\end_layout

\end_deeper
\begin_layout Enumerate
obj.ms - marketsize.
 Used in share calcs and demand calc.
 (selection)
\end_layout

\begin_layout Enumerate
obj.share - created shares.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Created in initAdditional if depvar does not exist! (selection)
\end_layout

\begin_layout Enumerate
Used by estimate to create d
\end_layout

\begin_layout Enumerate
actualDemand returns obj.share.s
\end_layout

\begin_layout Enumerate
shareJacobian uses selection to calculate if isempty(P)
\end_layout

\end_deeper
\begin_layout Enumerate
obj.G, H, GG, HH, GH
\end_layout

\begin_deeper
\begin_layout Enumerate
Created by initSimulation
\end_layout

\begin_layout Enumerate
Used by shares, shareJacobian and elasticities
\end_layout

\end_deeper
\begin_layout Enumerate
obj.sim - structure with selection, d and market.
 Only market is really needed.
 Remove? 
\end_layout

\begin_layout Subsection
RCDemand class
\end_layout

\begin_layout Enumerate
obj.draws - a Draws class instance with nonlinear draws.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Only created once - why? 
\end_layout

\begin_layout Enumerate
What happens in copy? What do we want to happen?!
\end_layout

\end_deeper
\begin_layout Enumerate
obj.period - list of RCDemandMarket class instances (selection)
\end_layout

\begin_layout Enumerate
obj.x2 - nonlinear data matrix, with logprice in CES.
 Not demeaned in FE.
 (selection)
\end_layout

\begin_layout Enumerate
obj.nonlinparams - list of all nonlinear.
 Used by: RCDemandMarket, ...
\end_layout

\begin_layout Enumerate
obj.vars2 - nonlin variable names.
 Replace with function.
\end_layout

\begin_layout Subsection
RCDemandMarket class
\end_layout

\begin_layout Enumerate
obj.alpha and obj.sigma
\end_layout

\begin_deeper
\begin_layout Enumerate
Set in constructor
\end_layout

\begin_layout Enumerate
Used in shares and shareJacobian
\end_layout

\end_deeper
\begin_layout Enumerate
obj.x2 - for estimation.
\end_layout

\begin_deeper
\begin_layout Enumerate
Updated by shares with new price.
 Change this behavior
\end_layout

\begin_layout Enumerate
creates obj.vx in init
\end_layout

\end_deeper
\begin_layout Enumerate
obj.v and obj.iweight
\end_layout

\begin_layout Enumerate
obj.s - why?
\end_layout

\begin_deeper
\begin_layout Enumerate
findDelta: to find delta giving shares
\end_layout

\end_deeper
\begin_layout Enumerate
obj.p - why? :
\end_layout

\begin_deeper
\begin_layout Enumerate
in shareJacobian: To calc on obj.p.
 Needs non-log price, x2 has log price in CES.
\end_layout

\end_deeper
\begin_layout Enumerate
obj.d - why?:
\end_layout

\begin_deeper
\begin_layout Enumerate
in shares: to do share calc
\end_layout

\end_deeper
\begin_layout Enumerate
obj.nonlinprice - from RCDemand nonlinparams - strcmp(demand.var.price, demand.nonli
nparams)
\end_layout

\begin_deeper
\begin_layout Enumerate
shareJacobian to update price col in data in simulation.
\end_layout

\end_deeper
\begin_layout Standard
Check that markets are updated with all changes.
 
\end_layout

\begin_layout Itemize
When is init invoked?
\end_layout

\begin_layout Subsection
Scenarios
\end_layout

\begin_layout Standard
Note that init is used both in initializing estimation and simulation.
 Three scenarios have slightly different setup requirements.
\end_layout

\begin_layout Enumerate
Estimate on data
\end_layout

\begin_layout Enumerate
Simulate on existing data
\end_layout

\begin_layout Enumerate
Create new data
\end_layout

\begin_layout Subsection
Requirements
\end_layout

\begin_layout Subsubsection
Estimate
\end_layout

\begin_layout Standard
For estimation, Estimate.var.panel has to be set unles Estimate.settings.paneltype
 == 'none'.
\end_layout

\begin_layout Subsubsection
Demand classes
\end_layout

\begin_layout Standard
For NLDemand in init: 
\end_layout

\begin_layout Enumerate
obj.var.market and obj.var.price must be set
\end_layout

\begin_deeper
\begin_layout Enumerate
In RCDemand obj.var.nonlinear must be set
\end_layout

\end_deeper
\begin_layout Enumerate
either 
\end_layout

\begin_deeper
\begin_layout Itemize
obj.var.quantity has to be in the data - estimation 
\end_layout

\begin_deeper
\begin_layout Itemize
obj.var.marketsize and obj.var.exog must be set
\end_layout

\end_deeper
\begin_layout Itemize
obj.alpha has to be set - simulation
\end_layout

\end_deeper
\begin_layout Standard
To calculate shares() NLDemand needs obj.d, obj.alpha, obj.sigma and corresponding
 obj.var.nests.
 The method initSimulation requires obj.nestlist to be set
\end_layout

\begin_layout Subsubsection
Market class
\end_layout

\begin_layout Standard
The Market class has direct and indirect requirements.
 In init
\end_layout

\begin_layout Enumerate
obj.var.firm and obj.demand have to be set
\end_layout

\begin_layout Enumerate
Estimation requires obj.var.depvar to be set.
 Not the best 
\end_layout

\begin_layout Enumerate
From obj.demand, it copies
\end_layout

\begin_deeper
\begin_layout Enumerate
obj.demand.p
\end_layout

\begin_layout Enumerate
obj.demand.q
\end_layout

\begin_layout Enumerate
obj.demand.marketid
\end_layout

\begin_layout Enumerate
obj.demand.panelid - not currently used, but can be used for panel estimates
 of costs
\end_layout

\end_deeper
\begin_layout Standard
From the obj.demand object, it requires
\end_layout

\begin_layout Enumerate
obj.demand.share.s (alt: obj.demand.actualDemand() )
\end_layout

\begin_layout Enumerate
obj.demand.shares(p) where market number has been set in obj.demand.initSimulation(m
arketnumber)
\end_layout

\begin_layout Enumerate
obj.demand.shareJacobian([]) and obj.s(sel) in findCosts.
 Invoke obj.demand.initSimulation(market_number) first to set market number.
 This two step process is used to avoid repeated initialization of market
\end_layout

\begin_layout Enumerate
obj.demand.shareJacobian( P ) and obj.demand.shares(pt)
\end_layout

\begin_layout Section
Calibration of simulated market
\end_layout

\begin_layout Standard
Some calculation on how to calibrate a market to get reasonable costs.
\end_layout

\begin_layout Standard
The FOC:
\begin_inset Formula 
\[
R\odot D\left(p-c\right)+s=0
\]

\end_inset

Single product firms with unnested logit
\begin_inset Formula 
\[
-\alpha s_{j}\left(1-s_{j}\right)\left(p_{j}-c_{j}\right)+s_{j}=0
\]

\end_inset


\begin_inset Formula 
\[
p_{j}+\frac{-1}{\alpha\left(1-s_{j}\right)}=c_{j}\ge0
\]

\end_inset


\begin_inset Formula 
\[
s_{j}\ge1-\frac{1}{\alpha p_{j}}
\]

\end_inset

Assume that we want to simulate 
\begin_inset Formula $N$
\end_inset

 products of approximately the same size, with the share of the outside
 good being approximately 
\begin_inset Formula $s_{0}\approx0.5$
\end_inset

.
 
\begin_inset Formula 
\[
1-s_{0}\approx1/2\ge Ns_{j}\ge N-\frac{N}{\alpha p_{j}}
\]

\end_inset


\begin_inset Formula 
\[
1-\frac{1}{2N}\le\frac{1}{\alpha p_{j}}
\]

\end_inset


\begin_inset Formula 
\[
\frac{2N}{2N-1}\ge\alpha p_{j}
\]

\end_inset

We thus want 
\begin_inset Formula $\alpha p_{j}<1$
\end_inset

 on average to avoid nonnegative costs.
 
\begin_inset Formula 
\[
\log\left(s_{j}/s_{0}\right)=\delta_{j}=d_{j}-\alpha p_{j}
\]

\end_inset


\end_layout

\begin_layout Standard
Negative costs can also arise due to variability in 
\begin_inset Formula $d_{j}$
\end_inset

.
\end_layout

\begin_layout Section
Distributions and draws
\end_layout

\begin_layout Standard
Distributions are generated from random draws using the inverse CDF.
\end_layout

\begin_layout Subsection
Logistic distribution
\end_layout

\begin_layout Standard
For the logistic distribution, we have the CDF:
\begin_inset Formula 
\[
y=\frac{1}{1+e^{-\frac{x-\mu}{s}}}
\]

\end_inset

 where the variance is given by 
\begin_inset Formula 
\[
\frac{s^{2}\pi^{2}}{3}
\]

\end_inset

In order for the variance to be 1, we have 
\begin_inset Formula $\mu=0$
\end_inset

 and 
\begin_inset Formula 
\[
s=\frac{\sqrt{3}}{\pi}
\]

\end_inset

It has skewness 0 and kurtosis 1.2.
 Inverting the CDF
\begin_inset Formula 
\[
x=-log\left(\frac{1}{y}-1\right)\frac{\sqrt{3}}{\pi}
\]

\end_inset


\end_layout

\begin_layout Subsection
Triangular distribution
\end_layout

\begin_layout Standard
Let the triangular distribution have a support 
\begin_inset Formula $\left[a,b\right]$
\end_inset

 with a max at 
\begin_inset Formula $c$
\end_inset

.
 The CDF at b has to be 1, which implies that the height is given by:
\begin_inset Formula 
\[
\left(c-a\right)h+\left(b-c\right)h=2
\]

\end_inset

 and thus 
\begin_inset Formula 
\[
h=\frac{2}{b-a}
\]

\end_inset

Let 
\begin_inset Formula $c=\left(b-a\right)/2$
\end_inset

.
 Then the mean is 0 if 
\begin_inset Formula $a=-b$
\end_inset

 and 
\begin_inset Formula $c=0$
\end_inset

 
\begin_inset Formula 
\[
\frac{a+b+c}{3}=\frac{a+b}{2}
\]

\end_inset

and the variance is 1
\begin_inset Formula 
\[
\frac{a^{2}+b^{2}+c^{2}-ab-ac-bc}{18}=1
\]

\end_inset

if 
\begin_inset Formula $b=\sqrt{6}$
\end_inset

.
 
\end_layout

\begin_layout Standard
The CDF is given by
\begin_inset Formula 
\[
\frac{\left(x-a\right)^{2}}{\left(b-a\right)\left(c-a\right)}=\frac{\left(x+b\right)^{2}}{2b^{2}}
\]

\end_inset

for 
\begin_inset Formula $-b\le x\le0$
\end_inset

 and 
\begin_inset Formula 
\[
1-\frac{\left(b-x\right)^{2}}{\left(b-a\right)\left(b-c\right)}=1-\frac{\left(b-x\right)^{2}}{2b^{2}}
\]

\end_inset

 for positive 
\begin_inset Formula $x$
\end_inset

.
 At 
\begin_inset Formula $x=0$
\end_inset

, the CDF has the value 1/2.
 The inverse CDF for 
\begin_inset Formula $y<1/2$
\end_inset

 is given by
\begin_inset Formula 
\[
x^{2}=\sqrt{2}b\sqrt{y}-b=\sqrt{12y}-\sqrt{6}
\]

\end_inset

and for 
\begin_inset Formula $y<1/2$
\end_inset

 it is
\begin_inset Formula 
\[
x=b-\sqrt{2}b\sqrt{1-y}=\sqrt{6}-\sqrt{12\left(1-y\right)}
\]

\end_inset


\end_layout

\begin_layout Subsection
Log-normal distribution
\end_layout

\begin_layout Standard
The standard normal distribution CDF can be expressed as
\begin_inset Formula 
\[
y=\frac{1}{2}+\frac{1}{2}\mathrm{erf}\left[\frac{x}{\sqrt{2}}\right]=C\left[x\right]
\]

\end_inset


\end_layout

\begin_layout Standard
The log-normal distribution has a CDF 
\begin_inset Formula 
\[
y=\frac{1}{2}+\frac{1}{2}\mathrm{erf}\left[\frac{\log x-\mu}{\sqrt{2}\sigma}\right]=C\left[\frac{\log x-\mu}{\sigma}\right]
\]

\end_inset

The inverse is given by:
\begin_inset Formula 
\[
y=C\left[\frac{\log x}{\sigma}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
It has mean, setting 
\begin_inset Formula $\mu=0$
\end_inset

 
\begin_inset Formula 
\[
e^{\mu+\sigma^{2}/2}=e^{\sigma^{2}/2}
\]

\end_inset

and variance
\begin_inset Formula 
\[
\left(e^{\sigma^{2}}-1\right)e^{2\mu+\sigma^{2}}=\left(e^{\sigma^{2}}-1\right)e^{\sigma^{2}}=\left(e^{\sigma^{2}}-1\right)e^{\sigma^{2}}=1
\]

\end_inset


\end_layout

\begin_layout Standard
The polynomial 
\begin_inset Formula $z^{2}-z-1=0$
\end_inset

 has a positive solution 
\begin_inset Formula $\frac{1+\sqrt{5}}{2}$
\end_inset

, and thus 
\begin_inset Formula $\sigma$
\end_inset

 satisfies
\begin_inset Formula 
\[
e^{\sigma^{2}}=\frac{1+\sqrt{5}}{2}
\]

\end_inset

 and 
\begin_inset Formula 
\[
\sigma=\sqrt{\log\left(\frac{1+\sqrt{5}}{2}\right)}
\]

\end_inset

To get mean zero, we have to subtract the mean as given above:
\begin_inset Formula 
\[
e^{\sigma^{2}/2}=\left(\frac{1+\sqrt{5}}{2}\right)^{1/2}
\]

\end_inset

The inverse CDF is given by:
\begin_inset Formula 
\[
x=e^{\sigma C^{-1}\left(y\right)}
\]

\end_inset


\end_layout

\end_body
\end_document
